apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: app-template-azure
  title: Create new App on Azure
  description: Create a simple application with standard confguration
  tags:
    - app
spec:
  owner: simac
  type: service

  parameters:
    #Change parameters
    - title: Component information
      required:
        - name
        - description
        - owner
        - namespace
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the app
          ui:field: EntityNamePicker
        description:
          title: Description
          type: string
          description: Description fit for the app
        owner:
          title: Owner
          type: string
          description: Owner team of the app in backstage
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
        namespace:
          title: Namespace
          type: string
          description: Target namespace of the app
          ui:field: EntityNamePicker      
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - dev.azure.com
  steps:
    - id: template
      name: Fetch Manifests + Template
      action: fetch:template
      input:
        url: ./manifests
        copyWithoutRender:
          - .github/workflows/*
        values:
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          name: ${{ parameters.name }}
          description: ${{ parameters.description }}
          owner: ${{ parameters.owner }}
          namespace: ${{ parameters.namespace }}

    - id: publish
      name: Publish
      action: publish:azure
      input:
        allowedHosts: ["dev.azure.com"]
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}

    # - id: get_azure_repo_id
    #   name: Get Azure Repo
    #   action: azure:repository:get
    #   input:
    #   ## TODO Remove hardcoded
    #     # organization: ${{ parameters.organization }}
    #     organization: simacsupport
    #     # project: ${{ parameters.project }}
    #     project: Microservice Team
    #     repositoryName: ${{ parameters.repositoryName }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}